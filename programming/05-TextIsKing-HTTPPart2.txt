One of the great things about web development - almost everything is text based. You don't need a special program to view or edit information.

HTTP is a text-based protocol. When resources get sent from the server to the client, they're wrapped up in HTTP's text format. 

If we want to look at that format, we have to know how to manipulate text on our system. Normally, the browser calls the server to request a resource, and when the server responds, the browser handles it. We're going to have to make the call ourselves and handle the response. 

A program named 'curl' (commonly pronounced like the word, but named as a joke: "see url") will make the HTTP call for us. The command looks like this:

`curl -v example.com`

The first element is the program name, curl. The next element, '-v' is an option. Options change how the program operates; -v stands for 'verbose', which means curl will output as much info as it can (default behavior without the -v, you could think of as the opposite of verbose, "succinct" or "brief").

The third element is called an argument. Arguments are different than options, because while options change how the program executes (verbose vs. brief), arguments are pieces of data the program uses during its execution. As the name implies, options are always optional. If an argument appears optional, the program is using some default value without telling you about it. 

Remember separation of concerns? Somewhere inside the browser, there's code that does the same thing as curl: check DNS to get the IP address for the host, call the IP address and ask for the resource. However the browser goes a step farther and attempts to render the resource in a visual way. curl stops, and outputs whatever it gets back as text. 

Try curling a few different sites, with and without the verbose option. curl allows us to view all of the text of the HTTP transaction, but we can't do anything with it. Next, we'll learn how to capture and inspect text.
